@import "config";
@import "menu";

* {
  box-sizing: border-box;
}

body {
  @include background;
  background: $primary-color;
  color: set-text-color($primary-color);
  height: 100%;
  margin: 0;
  font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
  line-height: 1.5;
}

//Headings
h1,
h2,
h3 {
  margin: 0;
  font-weight: 400;
  //nesting with sass &.lg-heading same as h1.lg-heading
  &.lg-heading {
    //default 16px so 6rem is 16*6 =96px em would take the font-size from the parent element where as rem is the html body
    font-size: 6rem;
  }

  &.sm-heading {
    margin-bottom: 2rem;
    //0.2rem top and bottom, 1rem left and right
    padding: 0.2rem 1rem;
    background: rgba(lighten($primary-color, 2), 0.5);
  }
}

a {
  color: #fff;
  text-decoration: none;
}

header {
  //always want the header at top, using position fixed.
  position: fixed;
  //z-index so it is always up front
  z-index: 2;
  width: 100%;
}

.text-secondary {
  color: $secondary-color;
}

main {
  padding: 4rem;
  // height: 100%;
  // setting up sticky footer with min-height: calc(); we are setting the main height to 100vh minus 60px which is the height of our footer.
  //this way the footer always stays at the bottom using calc().
  min-height: calc(100vh - 60px);

  .icons {
    margin-top: 1rem;

    a {
      padding: 0.4rem;

      &:hover {
        color: $secondary-color;
        @include easeOut;
      }
    }
  }

  &#home {
    //we don't want scroll bars
    overflow: hidden;
    h1 {
      margin-top: 20vh;
    }
  }
}

.about-info {
  display: grid;
  // use gride gap for spacing
  grid-gap: 30px;
  grid-template-areas:
    "bioimage bio bio"
    "job1 job2 job3";
  grid-template-columns: repeat(3, 1fr);

  //nesting
  .bio-image {
    grid-area: bioimage;
    margin: auto;
    border-radius: 50%;
    border: $secondary-color 3px solid;
  }

  .bio {
    grid-area: bio;
    font-size: 1.5rem;
  }

  .job-1 {
    grid-area: job1;
  }

  .job-2 {
    grid-area: job2;
  }

  .job-3 {
    grid-area: job3;
  }

  .job {
    background: lighten($primary-color, 5);
    padding: 0.5rem;
    border-bottom: $secondary-color 5px solid;
  }
}

.date {
  letter-spacing: 0.1rem;
}

// Work/Projects
.projects {
  display: grid;
  grid-gap: 0.7rem;
  grid-template-columns: repeat(2, 1fr);
  // @media screen and (max-width: 500px) {
  //   grid-template-columns: 1fr;
  // }

  .project-img {
    width: 100%;
    border: 3px #fff solid;

    &:hover {
      opacity: 0.5;
      border-color: $secondary-color;
      //so when changing border color & opacity it uses our mixin easeOut
      @include easeOut;
    }
  }
}

//Contact page
.boxes {
  // display: flex;
  // flex-wrap: wrap;
  // justify-content: space-evenly;
  display: grid;
  column-gap: 30px;
  grid-template-columns: 1fr;
  align-items: center;
  margin-top: 1rem;

  div {
    font-size: 2rem;
    border: 3px solid #fff;
    padding: 1.5rem 2.5rem;
    margin-bottom: 3rem;
    @include easeOut;

    &:hover {
      padding: 0.5rem 1.5rem;
      background: $secondary-color;
      color: set-text-color($secondary-color);
      span {
        color: set-text-color($secondary-color);
      }
    }
  }
}

//Button Styles
// using inheritance, there is no .btn class but, we are going to extend class to .btn-light & .btn-dark
//with sass you can extend the class
.btn {
  display: block;
  padding: 0.5rem 1rem;
  border: 0;
  margin-bottom: 0.3rem;
  &:hover {
    background: $secondary-color;
    color: set-text-color($secondary-color);
  }
}

.btn-dark {
  //using inheritance to extend .btn class on both .btn-dark & .btn-light. This is a SASS feature
  @extend .btn;
  background: darken($primary-color, 50);
  color: #fff;
}

.btn-light {
  //using inheritance to extend .btn class on both .btn-dark & .btn-light. This is a SASS feature
  @extend .btn;
  background: lighten($primary-color, 50);
  color: #333;
}

//styling footer
#main-footer {
  text-align: center;
  padding: 1rem;
  background: darken($primary-color, 10);
  color: set-text-color($primary-color);
  height: 60px;
}

//styling Modals
//Modal Background
.modal {
  display: none;
  position: fixed;
  z-index: 1;
  padding-top: 100px;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  background-color: rgba(lighten($primary-color, 2), 0.9);
}
//modal content
.modal-content {
  background-color: rgba(lighten($primary-color, 2), 0.9);
  margin: auto;
  padding: 20px;
  border: 2px solid $secondary-color;
  width: 90%;
}
.modal-imgs {
  display: flex;
  align-items: center;
  justify-content: space-evenly;
  flex-wrap: wrap;
}
.modal-single-img {
  max-width: 350px;
  object-fit: contain;
  margin: 1rem 2.5rem;
  border-radius: 5px;
  @include easeOut;
  &:hover {
    max-width: 600px;
  }
}
.modal-details {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
}
.tech {
  background: lighten($primary-color, 10);
  letter-spacing: 0.3rem;
  font-weight: 400;
  font-size: 2rem;
}
.tech-list {
  list-style-type: none;
  font-size: 1.2rem;
  font-weight: 300;
  letter-spacing: 0.1rem;
  width: 200px;
  li {
    &:hover {
      color: $secondary-color;
      cursor: pointer;
    }
  }
}
//close button
.close {
  color: #aaa;
  float: right;
  font-size: 28px;
  font-weight: bold;
  &:hover,
  &:focus {
    color: #000;
    text-decoration: none;
    cursor: pointer;
  }
}
//Head-Games Modal
.modal-hg {
  display: none;
  position: fixed;
  z-index: 1;
  padding-top: 100px;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  background-color: rgba(lighten($primary-color, 2), 0.9);
}
.modal-content-hg {
  background-color: rgba(lighten($primary-color, 2), 0.9);
  margin: auto;
  padding: 20px;
  border: 2px solid $secondary-color;
  width: 90%;
}
.close-hg {
  color: #aaa;
  float: right;
  font-size: 28px;
  font-weight: bold;
  &:hover,
  &:focus {
    color: #000;
    text-decoration: none;
    cursor: pointer;
  }
}
// importing media queries at the bottom cause we want them to run after everything else.
@import "mobile";
